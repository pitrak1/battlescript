class float(numeric):
    __value = __numeric__(0.0)

    def __init__(self, value):
        if isinstance(value, float):
            self.__value = value.__value
        else:
            self.__value = value

    def __add__(self, other):
        return self.__perform_operation(other, '+')

    def __sub__(self, other):
        return self.__perform_operation(other, '-')

    def __mul__(self, other):
        return self.__perform_operation(other, '*')

    def __truediv__(self, other):
        return self.__perform_operation(other, '/')

    def __floordiv__(self, other):
        return self.__perform_operation(other, '//')

    def __mod__(self, other):
        return self.__perform_operation(other, '%')

    def __pow__(self, other):
        return self.__perform_operation(other, '**')

    def __pos__(self):
        return float(self.__value)

    def __neg__(self):
        return float(-self.__value)

    def __eq__(self, other):
        return self.__perform_operation(other, '==')

    def __ne__(self, other):
        return self.__perform_operation(other, '!=')

    def __lt__(self, other):
        return self.__perform_operation(other, '<')

    def __gt__(self, other):
        return self.__perform_operation(other, '>')

    def __le__(self, other):
        return self.__perform_operation(other, '<=')

    def __ge__(self, other):
        return self.__perform_operation(other, '>=')

    def __iadd__(self, other):
        self.__value = self.__get_operation_result(other, '+')
        return self

    def __isub__(self, other):
        self.__value = self.__get_operation_result(other, '-')
        return self
    
    def __imul__(self, other):
        self.__value = self.__get_operation_result(other, '*')
        return self

    def __itruediv__(self, other):
        self.__value = self.__get_operation_result(other, '/')
        return self

    def __ifloordiv__(self, other):
        self.__value = self.__get_operation_result(other, '//')
        return self

    def __imod__(self, other):
        self.__value = self.__get_operation_result(other, '%')
        return self

    def __ipow__(self, other):
        self.__value = self.__get_operation_result(other, '**')
        return self

    def __perform_operation(self, other, operation):
        if operation == '//':
            return int(self.__get_operation_result(other, operation))
        # this didn't work, need to figure it out
        # elif isinstance(other, float) or isinstance(other, int):
        elif operation in ['==', '!=', '<', '>', '<=', '>=']:
            return bool(self.__get_operation_result(other, operation))
        else:
            return float(self.__get_operation_result(other, operation))
